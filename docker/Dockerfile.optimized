# Paper Trading Platform Docker Image - Ultra-Optimized
# Target size: ~400-500MB (down from 1.44GB)

# Build stage - for compilation
FROM python:3.11-alpine as builder

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    g++ \
    musl-dev \
    linux-headers \
    libffi-dev \
    openssl-dev \
    cargo \
    rust \
    clang \
    clang-dev \
    llvm-dev

# Set working directory
WORKDIR /build

# Copy requirements
COPY requirements-production.txt .

# Install Python dependencies in a virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements-production.txt

# Production stage - minimal runtime
FROM python:3.11-alpine as production

# Install only runtime dependencies
RUN apk add --no-cache \
    curl \
    procps \
    && rm -rf /var/cache/apk/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Set working directory
WORKDIR /workspace

# Copy only necessary application files
COPY src/ src/
COPY utils/ utils/
COPY scripts/ scripts/
COPY config/ config/
COPY web_dashboard/ web_dashboard/
COPY VERSION .

# Create necessary directories
RUN mkdir -p runlogs/papertrading logs data

# Create non-root user
RUN addgroup -g 1001 -S trader && \
    adduser -S trader -u 1001 -G trader
RUN chown -R trader:trader /workspace
USER trader

# Expose ports
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/status || exit 1

# Default command
CMD ["python", "-m", "scripts.paper_trading.paper_trading_server", "--host", "0.0.0.0", "--port", "8000"]

# Development stage - extends production with dev tools
FROM production as dev

# Switch back to root to install dev packages
USER root

# Install development tools
RUN pip install --no-cache-dir \
    pytest-xdist \
    debugpy \
    ipython \
    jupyter \
    black \
    isort \
    mypy \
    ruff

# Copy test files for development
COPY tests/ tests/

# Expose additional dev ports
EXPOSE 8888 2345

# Switch back to trader user
USER trader

# Default to bash for development
CMD ["sh"]
