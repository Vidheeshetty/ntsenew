## removed explicit version line (Compose v3+ no longer requires it)

x-common-env: &common-env
  environment:
    - PYTHONPATH=/workspace
    - TZ=Asia/Kolkata

services:
  # ------------------------------------------
  # Core application containers (internal net)
  # ------------------------------------------
  paper-trading-daemon:
    image: gtalknitin/ntplatform:${DEPLOY_TAG:-latest}
    container_name: paper-trading-daemon
    restart: unless-stopped
    command: ["python", "scripts/paper_trading/run_paper_trading_daemon.py", "--config", "config/paper_trading/my_zerodha.yaml"]
    volumes:
      - paper_trading_data:/workspace/runlogs
      - paper_trading_logs:/workspace/logs
    <<: *common-env
    networks:
      - backend_net

  paper-trading-server:
    image: gtalknitin/ntplatform:${DEPLOY_TAG:-latest}
    container_name: paper-trading-server
    restart: unless-stopped
    command: ["python", "scripts/paper_trading/paper_trading_server.py", "--host", "0.0.0.0", "--port", "8000", "--config", "config/paper_trading/my_zerodha.yaml"]
    expose:
      - "8000"  # exposed only to internal network
    volumes:
      - paper_trading_data:/workspace/runlogs
      - paper_trading_logs:/workspace/logs
    <<: *common-env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - backend_net
    depends_on:
      - paper-trading-daemon

  # ------------------------------------------
  # Reverse proxy and TLS
  # ------------------------------------------
  nginx:
    image: nginx:1.25-alpine
    container_name: synapse-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    depends_on:
      - paper-trading-server
    networks:
      - backend_net

  certbot:
    image: certbot/certbot:latest
    container_name: synapse-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    entrypoint: /bin/sh
    command: -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done;"
    networks:
      - backend_net

# ------------------------------------------
# Networks & volumes
# ------------------------------------------
networks:
  backend_net:
    driver: bridge

volumes:
  paper_trading_data:
  paper_trading_logs:
  certbot-etc:
  certbot-var:
